Project Folder Structure:

.git/ (ignored)
.gitignore/ (ignored)
.vscode/
  launch.json
build/ (ignored)
compileProject.js
node_modules/ (ignored)
package-lock.json/ (ignored)
package.json/ (ignored)
project_summary.txt/ (ignored)
public/
  favicon.ico
  index.html
  logo192.png
  logo512.png
  manifest.json
  robots.txt
  TyTyPottery.jpg
  TyTyPotteryIcon.png
README.md
src/
  App.js
  components/
    AnimatedBackground.js
  Contact.js
  emails/
    index.js
  Home.js
  index.css
  index.js
  LandingPage.js
  Navbar.js
  pictures/
    class_photos/
      BOS-1.jpg
      BOS-2.jpg
      BOS-3.jpg
      BOS-4.jpg
      BOS-7.jpg
      BOS-8.jpg
      BOS-9.jpg
      buildings.jpg
      church.jpg
      dots.jpg
      feiza.jpg
      flower.jpg
      gardenTurtles.jpg
      IceMan.jpg
      jazz.jpg
      lyfe.jpg
      moutain.jpg
      mushroom.jpg
      myPortrait.jpg
      Nacho.jpg
      onTheTown.jpg
      sirNoodle.jpg
      skull.jpg
      skullZ.jpg
      skullz2.jpg
      skullz3.jpg
      sub.jpg
      theCloudyMountains.jpg
      thePower.jpg
      tower.jpg
      transform.jpg
      tree.jpg
      unitedArtists.jpg
      unity.jpg
      wild.jpg
    porfolio_photos/
      animation_photos/
        image1.png
        image2.png
        image3.png
        image4.png
        image5.png
      atSymbol.png
      background2.jpg
      BOSContactSheet.jpg
      BOTICCINO.jpg
      coupleStaring.jpg
      coupleWalking1.jpg
      DishonoredGods_Link_from_Zelda_fighting_blood_war_8k_realistic._b8790919-6827-4498-8a24-f5e8131d0c13.png
      FaceShot1.png
      FaceShot2.png
      Faceshot3.png
      familyPictures.jpg
      imgonline-com-ua-TextureSeamless-JCI8TaR1FBycHm.jpg
      LinkTrustExample.png
      LinkTrustExample2.png
      UserRoles.png
      walking.png
  Projects.js
  SchoolProjects.js
  Skills.js
  Testimonials.js
  WorkProjects.js


---

Project Files Content:



---

File: .vscode\launch.json

{
    // Use IntelliSense to learn about possible attributes.
    // Hover to view descriptions of existing attributes.
    // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387
    "version": "0.2.0",
    "configurations": [
        {
            "type": "chrome",
            "request": "launch",
            "name": "Launch Chrome against localhost",
            "url": "http://localhost:8080",
            "webRoot": "${workspaceFolder}"
        }
    ]
}

---

File: compileProject.js

const fs = require('fs');
const path = require('path');

const projectDir = 'C:\\Users\\Ty\\source\\repos\\Personal-Profile\\my-profile-website';
const outputFile = 'project_summary.txt';

// Configuration
const MAX_FILE_SIZE = 1024 * 1024; // 1MB limit
const RELEVANT_EXTENSIONS = [
  '.js', '.jsx', '.ts', '.tsx',  // JavaScript/TypeScript files
  '.html', '.css', '.scss',      // Web files
  '.json', '.md',                // Config and documentation
  '.txt'                         // Text files
];

const SKIP_FILES = [
  'node_modules',
  '.git',
  '.gitignore',
  'package-lock.json',
  'package.json',
  'project_summary.txt',
  '.map',  // Skip source map files
  'main.30bebfa5.css', // Skip the specific CSS file
];

const SKIP_DIRECTORIES = [
  'build',  // Skip the entire build directory
  'node_modules',
  '.git'
];

const SKIP_CONTENTS_EXTENSIONS = [
  '.jpg', '.jpeg', '.png', '.gif', '.ico', '.svg',  // Images
  '.map',  // Source maps
  '.ttf', '.woff', '.woff2', '.eot'  // Fonts
];

const getAllFiles = (dirPath, arrayOfFiles) => {
  const files = fs.readdirSync(dirPath);
  arrayOfFiles = arrayOfFiles || [];

  // Skip entire directories
  const dirName = path.basename(dirPath);
  if (SKIP_DIRECTORIES.includes(dirName)) {
    return arrayOfFiles;
  }

  files.forEach((file) => {
    if (SKIP_FILES.some(skip => file.includes(skip))) {
      return;
    }
    
    const fullPath = path.join(dirPath, file);
    if (fs.statSync(fullPath).isDirectory()) {
      arrayOfFiles = getAllFiles(fullPath, arrayOfFiles);
    } else {
      const ext = path.extname(file).toLowerCase();
      if (RELEVANT_EXTENSIONS.includes(ext)) {
        arrayOfFiles.push(fullPath);
      }
    }
  });

  return arrayOfFiles;
};

const getFilePreview = (filePath) => {
  const stats = fs.statSync(filePath);
  const extension = path.extname(filePath).toLowerCase();
  
  // Skip binary files and source maps
  if (SKIP_CONTENTS_EXTENSIONS.includes(extension)) {
    return `[${extension.substring(1)} file]`;
  }

  // Check file size
  if (stats.size > MAX_FILE_SIZE) {
    return `[File too large: ${(stats.size / (1024 * 1024)).toFixed(2)}MB]`;
  }

  try {
    return fs.readFileSync(filePath, 'utf-8');
  } catch (error) {
    return `[Error reading file: ${error.message}]`;
  }
};

const compileProjectFiles = (dirPath, outputFile) => {
  const files = getAllFiles(dirPath);
  let content = 'Project Folder Structure:\n\n';

  // Add folder structure
  const addFolderStructure = (dirPath, indent = '') => {
    const files = fs.readdirSync(dirPath);
    files.forEach((file) => {
      // Skip directories in folder structure
      if (SKIP_DIRECTORIES.includes(file)) {
        content += `${indent}${file}/ (ignored)\n`;
        return;
      }
      if (SKIP_FILES.some(skip => file.includes(skip))) {
        content += `${indent}${file}/ (ignored)\n`;
        return;
      }
      const filePath = path.join(dirPath, file);
      if (fs.statSync(filePath).isDirectory()) {
        content += `${indent}${file}/\n`;
        addFolderStructure(filePath, indent + '  ');
      } else {
        content += `${indent}${file}\n`;
      }
    });
  };

  addFolderStructure(dirPath);
  content += '\n\n---\n\nProject Files Content:\n\n';

  // Add file contents
  files.forEach((file) => {
    const relativePath = path.relative(dirPath, file);
    content += `\n\n---\n\nFile: ${relativePath}\n\n`;
    content += getFilePreview(file);
  });

  fs.writeFileSync(outputFile, content, 'utf-8');
  console.log(`Project files compiled into ${outputFile}`);
};

compileProjectFiles(projectDir, outputFile);

---

File: public\index.html

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <meta name="theme-color" content="#000000" />
    <meta
      name="description"
      content="Web site created using create-react-app"
    />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css" integrity="sha384-rbsA2VBKQhggwzxH7pPCaAqO46MgnOM80zW1RWuH61DGLwZJEdK2Kadq2F9CUG65" crossorigin="anonymous">
    <link rel="apple-touch-icon" href="%PUBLIC_URL%/logo192.png" />
    <!--
      manifest.json provides metadata used when your web app is installed on a
      user's mobile device or desktop. See https://developers.google.com/web/fundamentals/web-app-manifest/
    -->
    <link rel="manifest" href="%PUBLIC_URL%/manifest.json" />
    <!--
      Notice the use of %PUBLIC_URL% in the tags above.
      It will be replaced with the URL of the `public` folder during the build.
      Only files inside the `public` folder can be referenced from the HTML.

      Unlike "/favicon.ico" or "favicon.ico", "%PUBLIC_URL%/favicon.ico" will
      work correctly both with client-side routing and a non-root public URL.
      Learn how to configure a non-root public URL by running `npm run build`.
    -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/animate.min.css">
    <title>Ty Ty Pottery</title>
  </head>
  <body>
    <noscript>You need to enable JavaScript to run this app.</noscript>
    <div id="root"></div>
    <!--
      This HTML file is a template.
      If you open it directly in the browser, you will see an empty page.

      You can add webfonts, meta tags, or analytics to this file.
      The build step will place the bundled scripts into the <body> tag.

      To begin the development, run `npm start` or `yarn start`.
      To create a production bundle, use `npm run build` or `yarn build`.
    -->
  </body>
</html>


---

File: public\manifest.json

{
  "short_name": "React App",
  "name": "Create React App Sample",
  "icons": [
    {
      "src": "favicon.ico",
      "sizes": "64x64 32x32 24x24 16x16",
      "type": "image/x-icon"
    },
    {
      "src": "logo192.png",
      "type": "image/png",
      "sizes": "192x192"
    },
    {
      "src": "logo512.png",
      "type": "image/png",
      "sizes": "512x512"
    }
  ],
  "start_url": ".",
  "display": "standalone",
  "theme_color": "#000000",
  "background_color": "#ffffff"
}


---

File: public\robots.txt

# https://www.robotstxt.org/robotstxt.html
User-agent: *
Disallow:


---

File: README.md

# Getting Started with Create React App

This project was bootstrapped with [Create React App](https://github.com/facebook/create-react-app).

## Available Scripts

In the project directory, you can run:

### `npm start`

Runs the app in the development mode.\
Open [http://localhost:3000](http://localhost:3000) to view it in your browser.

The page will reload when you make changes.\
You may also see any lint errors in the console.

### `npm test`

Launches the test runner in the interactive watch mode.\
See the section about [running tests](https://facebook.github.io/create-react-app/docs/running-tests) for more information.

### `npm run build`

Builds the app for production to the `build` folder.\
It correctly bundles React in production mode and optimizes the build for the best performance.

The build is minified and the filenames include the hashes.\
Your app is ready to be deployed!

See the section about [deployment](https://facebook.github.io/create-react-app/docs/deployment) for more information.

### `npm run eject`

**Note: this is a one-way operation. Once you `eject`, you can't go back!**

If you aren't satisfied with the build tool and configuration choices, you can `eject` at any time. This command will remove the single build dependency from your project.

Instead, it will copy all the configuration files and the transitive dependencies (webpack, Babel, ESLint, etc) right into your project so you have full control over them. All of the commands except `eject` will still work, but they will point to the copied scripts so you can tweak them. At this point you're on your own.

You don't have to ever use `eject`. The curated feature set is suitable for small and middle deployments, and you shouldn't feel obligated to use this feature. However we understand that this tool wouldn't be useful if you couldn't customize it when you are ready for it.

## Learn More

You can learn more in the [Create React App documentation](https://facebook.github.io/create-react-app/docs/getting-started).

To learn React, check out the [React documentation](https://reactjs.org/).

### Code Splitting

This section has moved here: [https://facebook.github.io/create-react-app/docs/code-splitting](https://facebook.github.io/create-react-app/docs/code-splitting)

### Analyzing the Bundle Size

This section has moved here: [https://facebook.github.io/create-react-app/docs/analyzing-the-bundle-size](https://facebook.github.io/create-react-app/docs/analyzing-the-bundle-size)

### Making a Progressive Web App

This section has moved here: [https://facebook.github.io/create-react-app/docs/making-a-progressive-web-app](https://facebook.github.io/create-react-app/docs/making-a-progressive-web-app)

### Advanced Configuration

This section has moved here: [https://facebook.github.io/create-react-app/docs/advanced-configuration](https://facebook.github.io/create-react-app/docs/advanced-configuration)

### Deployment

This section has moved here: [https://facebook.github.io/create-react-app/docs/deployment](https://facebook.github.io/create-react-app/docs/deployment)

### `npm run build` fails to minify

This section has moved here: [https://facebook.github.io/create-react-app/docs/troubleshooting#npm-run-build-fails-to-minify](https://facebook.github.io/create-react-app/docs/troubleshooting#npm-run-build-fails-to-minify)


---

File: src\App.js

//import './App.css';
import { BrowserRouter, Route, Routes, Navigate } from "react-router-dom";
import Navbar from './Navbar';
import Home from './Home';
import LandingPage from './LandingPage';
import Skills from './Skills';
import Projects from './Projects';
import WorkProjects from './WorkProjects';
import SchoolProjects from './SchoolProjects';
import Testimonials from './Testimonials';
import Contact from './Contact';
import AnimatedBackground from './components/AnimatedBackground.js';
import "bootstrap/dist/css/bootstrap.min.css";
import "bootstrap/dist/js/bootstrap.bundle.min.js";
import './index.css';
import picture from './pictures/porfolio_photos/imgonline-com-ua-TextureSeamless-JCI8TaR1FBycHm.jpg';

const LandingPageContainer = () => (
  <div className="LandingPage-container" style={{backgroundImage: `url(${picture})`}}>
    <AnimatedBackground />
    <LandingPage />
  </div>
);

const DefaultContainer = () => (
  <div style={{backgroundImage: `url(${picture})`}}>
    <Navbar />
      <Routes>
        <Route exact path="/Home" element={<Home />} />
        <Route exact path="/Skills" element={<Skills />} />
        <Route exact path="/Projects" element={<Projects />} />
        <Route exact path="/Testimonials" element={<Testimonials />} />
        <Route exact path="/Contact" element={<Contact />} />
        <Route exact path="/WorkProjects" element={<WorkProjects />} />
        <Route exact path="/SchoolProjects" element={<SchoolProjects />} />
      </Routes>
  </div>
);


function App() {
  return (
    <BrowserRouter>
      <Routes>
        <Route exact path="/LandingPage" element={<LandingPageContainer />} />
        <Route exact path="/" element={<LandingPageContainer />} />
        <Route path="*" element={<DefaultContainer />} />
      </Routes>
    </BrowserRouter>
  );
}

export default App;


---

File: src\components\AnimatedBackground.js

import React from 'react';
import image1 from '../pictures/porfolio_photos/animation_photos/image1.png';
import image3 from '../pictures/porfolio_photos/animation_photos/image3.png';
import image4 from '../pictures/porfolio_photos/animation_photos/image4.png';
import image5 from '../pictures/porfolio_photos/animation_photos/image5.png';

const AnimatedBackground = () => {
  return (
    <div className="animated-background">
      <div className="sliding-background"></div>
      <div className="sliding-background second"></div>
      <div className="overlay"></div>
      <style>{`
        .animated-background {
          position: fixed;
          top: 0;
          left: 0;
          width: 100vw;
          height: 100vh;
          overflow: hidden;
          z-index: 10;
          opacity: 0.7;
        }

        .sliding-background {
          position: absolute;
          top: 0;
          left: 0;
          width: 400vw;
          height: 100vh;
          background: linear-gradient(45deg, 
            rgba(0, 0, 0, 0.6), 
            rgba(0, 0, 0, 0.4)
          ),
          url(${image1}) 0 0,
          url(${image3}) 100vw 0,
          url(${image4}) 200vw 0,
          url(${image5}) 300vw 0;
          background-size: contain;
          background-repeat: no-repeat;
          animation: slide 40s linear infinite;
        }

        .sliding-background.second {
          left: 400vw;
        }

        .overlay {
          position: absolute;
          top: 0;
          left: 0;
          width: 100%;
          height: 100%;
          background: linear-gradient(
            to right,
            rgba(128, 103, 67, 0.65),
            rgba(188, 163, 127, 0.55)
          );
        }

        @keyframes slide {
          0% {
            transform: translateX(0);
          }
          100% {
            transform: translateX(-400vw);
          }
        }

        .animated-background::after {
          content: '';
          position: absolute;
          top: 0;
          left: 0;
          right: 0;
          bottom: 0;
          background: linear-gradient(
            to right,
            rgba(0, 0, 0, 0.2) 0%,
            rgba(0, 0, 0, 0) 5%,
            rgba(0, 0, 0, 0) 95%,
            rgba(0, 0, 0, 0.2) 100%
          );
        }
      `}</style>
    </div>
  );
};

export default AnimatedBackground;

---

File: src\Contact.js

import React, { useState } from 'react';
import emailjs from '@emailjs/browser';
import picture from './pictures/porfolio_photos/atSymbol.png';

const ContactPage = () => {
  const [formData, setFormData] = useState({
    from_name: '',
    to_name: 'Ty',
    message: ''
  });
  
  const [status, setStatus] = useState({
    submitting: false,
    submitted: false,
    error: null
  });

  const handleChange = (e) => {
    const { name, value } = e.target;
    setFormData(prevState => ({
      ...prevState,
      [name]: value
    }));
  };

  const handleSubmit = async (e) => {
    e.preventDefault();
    setStatus({ submitting: true, submitted: false, error: null });

    const templateParams = {
      from_name: formData.from_name,
      to_name: formData.to_name,
      message: formData.message
    };

    try {
      await emailjs.send(
        'service_gpbeg2o',
        'template_p5fuu5u',
        templateParams,
        'LXR5pEwAxnbEtCvOP'
      );

      setStatus({
        submitting: false,
        submitted: true,
        error: null
      });

      // Clear form
      setFormData({
        from_name: '',
        to_name: 'Ty',
        message: ''
      });

    } catch (error) {
        debugger;
      console.error('EmailJS Error:', error);
      setStatus({
        submitting: false,
        submitted: false,
        error: 'Failed to send message. Please try again.'
      });
    }
  };

  return ( 
    <div className="container mt-5" style={{width: "100vw", minHeight: "100vh", overflow: "auto"}}>
      <div className='mt-5 p-3 bg-tertiary shadow'> 
        <div className='bg-secondary m-3 p-5 shadow'>
          <h1 className="text-accent mb-4">Contact Me</h1>
          
          {/* Contact Info */}
          <div className="mb-5">
            <div className="mt-5">Email: linxtree<img src={picture} style={{height: "13px"}}/>gmail.com</div>
            <div className="mt-3">LinkedIn: <a href="https://www.linkedin.com/in/ty-crenshaw-641941108/" 
               className="text-accent text-decoration-none">
              Ty Crenshaw
            </a></div>
          </div>

          {/* Contact Form */}
          <div className="bg-tertiary p-4 rounded shadow-sm">
            <h4 className="text-accent mb-4">Send Me a Message</h4>
            
            <form onSubmit={handleSubmit}>
              <div className="mb-3">
                <label htmlFor="from_name" className="form-label">Your Name</label>
                <input
                  type="text"
                  className="form-control"
                  id="from_name"
                  name="from_name"
                  value={formData.from_name}
                  onChange={handleChange}
                  required
                />
              </div>

              <div className="mb-3">
                <label htmlFor="message" className="form-label">Message</label>
                <textarea
                  className="form-control"
                  id="message"
                  name="message"
                  rows="5"
                  value={formData.message}
                  onChange={handleChange}
                  required
                />
              </div>

              {status.error && (
                <div className="alert alert-danger" role="alert">
                  {status.error}
                </div>
              )}

              {status.submitted && (
                <div className="alert alert-success" role="alert">
                  Message sent successfully!
                </div>
              )}

              <button 
                type="submit" 
                className="btn btn-primary"
                disabled={status.submitting}
              >
                {status.submitting ? 'Sending...' : 'Send Message'}
              </button>
            </form>
          </div>
        </div>
      </div>
    </div>
  );
};

export default ContactPage;

---

File: src\emails\index.js

import * as React from 'react';
import { Html } from '@react-email/html';
import { Button } from '@react-email/button';

export function Email(props) {
  const { url } = props;

  return (
    <Html lang="en">
      <Button href={url}>Click me</Button>
    </Html>
  );
}

---

File: src\Home.js

import React from 'react';
//import backgroundImage from './pictures/porfolio_photos/imgonline-com-ua-TextureSeamless-JCI8TaR1FBycHm.jpg';
import picture from './pictures/porfolio_photos/FaceShot2.png';

const Home = () => {
  return (
    <div className="container mt-5" style={{width: "100vw", minHeight: "100vh"}}>
      <div className="p-4 bg-tertiary shadow"> 
        <div className="bg-secondary m-3 p-5 shadow rounded">
          <div className="container"> 
            <div className="row align-items-center">
              {/* Image Column */}
              <div className="col-md-5 mb-4 mb-md-0">
                <div className="position-relative">
                  <div className="rounded-3 overflow-hidden shadow-lg">
                    <img 
                      src={picture} 
                      alt="Ty Crenshaw"
                      className="img-fluid"
                      style={{
                        width: "100%",
                        height: "auto",
                        objectFit: "cover"
                      }}
                    />
                  </div>
                  {/* Decorative element */}
                  <div 
                    className="position-absolute bg-primary" 
                    style={{
                      width: "100%",
                      height: "100%",
                      top: "10px",
                      left: "10px",
                      zIndex: -1,
                      opacity: 0.3,
                      borderRadius: "0.5rem"
                    }}
                  ></div>
                </div>
              </div>

              {/* Content Column */}
              <div className="col-md-7">
                <div className="ps-md-4">
                  <h1 className="display-4 text-accent mb-4">Ty Crenshaw</h1>
                  <h3 className="text-primary mb-4">Software Developer at LinkTrust</h3>
                  
                  <div className="mb-4">
                    <h4 className="text-accent mb-3">Professional Background</h4>
                    <p className="mb-4 text-secondary">
                      As a software developer at LinkTrust, I specialize in building online marketing solutions using .NET Framework, React, and MSSQL database. With over four years of experience, I've developed robust solutions that help businesses optimize their marketing strategies.
                    </p>
                  </div>

                  <div className="mb-4">
                    <h4 className="text-accent mb-3">Technical Expertise</h4>
                    <p className="mb-4 text-secondary">
                      My work primarily focuses on full-stack development, combining .NET Framework backend with React frontend. I'm particularly interested in artificial intelligence and constantly exploring new technologies to enhance our solutions.
                    </p>
                  </div>

                  <div className="mb-4">
                    <h4 className="text-accent mb-3">Personal Interests</h4>
                    <p className="mb-4 text-secondary">
                      Outside of coding, I enjoy gaming with my wife (Overwatch, Marvel Rivals, Beyond All Reason), taking walks, and occasionally pursuing outdoor activities like hiking and climbing. I'm always seeking new opportunities to grow both professionally and personally.
                    </p>
                  </div>

                  {/* Skills Tags */}
                  <div className="mt-4">
                    <div className="d-flex flex-wrap gap-2">
                      {['.NET', 'React', 'MSSQL', 'Full Stack', 'AI'].map((skill) => (
                        <span 
                          key={skill}
                          className="bg-primary text-tertiary px-3 py-1 rounded-pill"
                          style={{ fontSize: "0.9rem" }}
                        >
                          {skill}
                        </span>
                      ))}
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};

export default Home;

---

File: src\index.css

/* Base styles */
body {
  margin: 0;
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',
    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',
    sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

code {
  font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',
    monospace;
}

/* Custom variables */
:root {
  --bs-background: #806743;
  --bs-primary: #BCA37F;
  --bs-secondary: #EAD7BB;
  --bs-tertiary: #FFF2D8;
  --bs-accent: #4d391d;
  --transition-speed: 0.3s;
  --box-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);
}

/* Navigation */
.navbar-nav li a {
  color: var(--bs-tertiary) !important;
}

/* Text utilities */
.text-tertiary {
  color: var(--bs-tertiary) !important;
}

.text-accent {
  color: var(--bs-accent) !important;
}

/* Background utilities */
.bg-background { background-color: var(--bs-background) !important; }
.bg-accent { background-color: var(--bs-accent) !important; }
.bg-primary { background-color: var(--bs-primary) !important; }
.bg-secondary { background-color: var(--bs-secondary) !important; }
.bg-tertiary { background-color: var(--bs-tertiary) !important; }

/* Button styles */
.btn.btn-primary {
  color: #fff !important;
  background-color: var(--bs-primary) !important;
  border-color: var(--bs-primary) !important;
}

.btn.btn-primary:hover,
.btn.btn-primary:focus,
.btn.btn-primary:active,
.btn.btn-primary.active {
  color: #fff !important;
  background-color: var(--bs-background) !important;
  border-color: var(--bs-accent) !important;
}

.btn-light {
  --bs-btn-color: var(--bs-accent);
  --bs-btn-bg: var(--bs-tertiary);
  --bs-btn-border-color: var(--bs-tertiary);
  --bs-btn-hover-color: var(--bs-accent);
  --bs-btn-hover-bg: var(--bs-primary);
  --bs-btn-hover-border-color: var(--bs-primary);
  --bs-btn-focus-shadow-rgb: 211,212,213;
  --bs-btn-active-color: var(--bs-accent);
  --bs-btn-active-bg: var(--bs-primary);
  --bs-btn-active-border-color: var(--bs-primary);
  --bs-btn-active-shadow: var(--box-shadow);
  --bs-btn-disabled-color: var(--bs-accent);
  --bs-btn-disabled-bg: var(--bs-tertiary);
  --bs-btn-disabled-border-color: var(--bs-tertiary);
}

.btn-light:hover {
  transform: scale(1.05);
  transition: transform var(--transition-speed) ease;
}

.bg-secondary {
  background-color: var(--bs-secondary) !important;
}
.btn-secondary {
  color: #fff;
  background-color: var(--bs-secondary);
  border-color: var(--bs-secondary);
}
.btn-secondary:hover {
  color: #fff;
  background-color: #806743;
  border-color: #4d391d;
}

/* Component styles */
.moodboard {
  border: 10px solid;
  border-radius: 25px;
  padding: 20px;
  margin: auto;
}

.photo {
  border: 5px solid white;
}

/* Animations */
@keyframes gradientBg {
  0% { background-position: 0% 50%; }
  50% { background-position: 100% 50%; }
  100% { background-position: 0% 50%; }
}

.animate-gradient {
  background: linear-gradient(270deg, 
    var(--bs-background), 
    var(--bs-primary), 
    var(--bs-secondary));
  background-size: 200% 200%;
  animation: gradientBg 15s ease infinite;
}

---

File: src\index.js

import React from 'react';
import ReactDOM from 'react-dom/client';
import App from './App';

const root = ReactDOM.createRoot(document.getElementById('root'));
root.render(
  <React.StrictMode>
    <App />
  </React.StrictMode>
);


---

File: src\LandingPage.js

const LandingPage = () => {
    return ( 
        <div className="container pt-5" style={{width: "100vw", minHeight: "100vh", overflow: "auto", zIndex: 20, position: "sticky"}}>
            <div className="p-5 bg-secondary shadow animate__animated animate__fadeIn animate__delay-1s"> 
                <div className="p-5 bg-background shadow" style={{color:"#FFF2D8"}}>
                    <h1 className="text-tertiary display-1 fw-bold animate__animated animate__slideInDown" 
                        style={{ letterSpacing: "0.4em", color:"#FFF2D8"}}>
                        Ty Crenshaw
                    </h1>
                    <br />
                    <br />
                    <div className="text-tertiary p-3 animate__animated animate__fadeInLeft animate__delay-2s">
                        Software Developer
                    </div>
                    <br />
                    <div className="text-tertiary p-3 animate__animated animate__fadeInLeft animate__delay-3s">
                        Always curious, always learning
                    </div>
                    <br />
                    <div className="text-tertiary p-3 animate__animated animate__fadeInLeft animate__delay-4s">
                        Nature lover, occasional adventurer
                    </div>
                    <div style={{marginTop:"20px"}}>
                        <button type="button" 
                                className="btn btn-light animate__animated animate__bounceIn animate__delay-5s"
                                onClick={() => window.location.href = "/Home"}>
                            Explore
                        </button>
                    </div>   
                </div>
            </div>
        </div>
    );
}
 
export default LandingPage;

---

File: src\Navbar.js

const Navbar = () => {
    return (
        <nav className="navbar navbar-expand-lg bg-background shadow">
        <div className="container-fluid">
          <div className="collapse navbar-collapse" id="navbarSupportedContent">
            <ul className="navbar-nav me-auto mb-2 mb-lg-0">
              <li className="nav-item">
                <a className="nav-link active" aria-current="page" href="/Home">Home</a>
              </li>
              <li className="nav-item">
                <a className="nav-link" href="/Skills">Skills</a>
              </li>
              <li className="nav-item">
                <a className="nav-link" href="/Projects">Projects</a>
              </li>
              {/* <li className="nav-item">
                <a className="nav-link" href="/Testimonials">Testimonials</a>
              </li> */}
              <li className="nav-item">
                <a className="nav-link" href="/Contact">Contact</a>
              </li>
            </ul>
          </div>
        </div>
      </nav>
    );
}

export default Navbar;

---

File: src\Projects.js

import React, { useState } from 'react';
import WorkProjects from './WorkProjects';
import SchoolProjects from './SchoolProjects';

const Projects = () => {
  const [activeTab, setActiveTab] = useState('work');

  return (
    <div className="container mt-5" style={{width: "100vw", minHeight: "100vh", overflow: "auto"}}>
      <h1 className="text-accent mb-4">Projects</h1>

      {/* Tab Navigation */}
      <div className="d-flex mb-4">
        <button 
          className={`btn ${activeTab === 'work' ? 'btn-primary' : 'btn-secondary'} me-2`}
          onClick={() => setActiveTab('work')}
        >
          Work Projects
        </button>
        <button 
          className={`btn ${activeTab === 'school' ? 'btn-primary' : 'btn-secondary'}`}
          onClick={() => setActiveTab('school')}
        >
          School Projects
        </button>
      </div>

      {/* Tab Content */}
      <div className="tab-content">
        <div className={`tab-pane fade ${activeTab === 'work' ? 'show active' : ''}`}>
          <WorkProjects />
        </div>
        <div className={`tab-pane fade ${activeTab === 'school' ? 'show active' : ''}`}>
          <SchoolProjects />
        </div>
      </div>
    </div>
  );
};

export default Projects;

---

File: src\SchoolProjects.js

import React from 'react';
import picture from './pictures/porfolio_photos/background2.jpg';
import mainBOS from './pictures/porfolio_photos/BOSContactSheet.jpg';

const SchoolProjects = () => {
  // Creating an array of image URLs
  const images = require.context('./pictures/class_photos', false, /\.(jpg|JPG|jpeg)$/);
  const imageList = images.keys().map((image) => images(image));

  return (
    <div className="container mt-5" style={{ width: "100vw", minHeight: "100vh", overflow: "auto" }}>
      {/* Education Section */}
      <div className="p-3 bg-tertiary shadow"> 
        <div className="bg-secondary m-3 p-5 shadow">
          {/* Education Overview */}
          <div className="mb-5">
            <h2 className="text-accent mb-4">Educational Journey</h2>
            <div className="bg-tertiary p-4 rounded shadow-sm">
              <div className="d-flex align-items-center mb-4">
                <div className="bg-primary rounded-circle p-3 me-3">
                  <svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" className="text-tertiary">
                    <path d="M22 10v6M2 10l10-5 10 5-10 5z"/>
                    <path d="M6 12v5c3 3 9 3 12 0v-5"/>
                  </svg>
                </div>
                <div>
                  <h4 className="mb-2">Computer Science</h4>
                  <p className="mb-0 text-accent">Bachelor of Science - Completed</p>
                </div>
              </div>

              <div className="d-flex align-items-center">
                <div className="bg-primary rounded-circle p-3 me-3">
                  <svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" className="text-tertiary">
                    <path d="M12 19l7-7 3 3-7 7-3-3z"/>
                    <path d="M18 13l-1.5-7.5L2 2l3.5 14.5L13 18l5-5z"/>
                    <path d="M2 2l7.586 7.586"/>
                    <circle cx="11" cy="11" r="2"/>
                  </svg>
                </div>
                <div>
                  <h4 className="mb-2">Art and Design</h4>
                  <p className="mb-0 text-accent">Bachelor of Science - In Progress</p>
                </div>
              </div>
            </div>
          </div>

          {/* Photography Section */}
          <div className="mt-5">
            <h3 className="text-accent mb-4">Photography Portfolio</h3>
            <div className="moodboard p-4" style={{ 
              backgroundImage: `url(${picture})`,
              borderRadius: "1rem",
              boxShadow: "0 0.5rem 1rem rgba(0, 0, 0, 0.15)"
            }}>
              {/* Contact Sheet */}
              <div className="row mb-4">
                <div className="col-12">
                  <img 
                    className="img-fluid rounded shadow photo" 
                    src={mainBOS} 
                    alt="Contact Sheet"
                    style={{ width: "100%" }}
                  />
                </div>
              </div>

              {/* Photo Grid - Maintaining your existing grid structure */}
              <div className="row">
                {/* First Column */}
                <div className="col-md-4 d-flex flex-column">
                  {imageList.slice(0, Math.ceil(imageList.length / 3)).map((image, index) => (
                    <div key={index} className="mb-4">
                      <img 
                        className="img-fluid rounded shadow photo" 
                        src={image} 
                        alt={`Class photo ${index + 1}`}
                      />
                    </div>
                  ))}
                </div>

                {/* Second Column */}
                <div className="col-md-4 d-flex flex-column">
                  {imageList.slice(Math.ceil(imageList.length / 3), Math.ceil(2 * imageList.length / 3)).map((image, index) => (
                    <div key={index} className="mb-4">
                      <img 
                        className="img-fluid rounded shadow photo" 
                        src={image} 
                        alt={`Class photo ${Math.ceil(imageList.length / 3) + index + 1}`}
                      />
                    </div>
                  ))}
                </div>

                {/* Third Column */}
                <div className="col-md-4 d-flex flex-column">
                  {imageList.slice(Math.ceil(2 * imageList.length / 3)).map((image, index) => (
                    <div key={index} className="mb-4">
                      <img 
                        className="img-fluid rounded shadow photo" 
                        src={image} 
                        alt={`Class photo ${Math.ceil(2 * imageList.length / 3) + index + 1}`}
                      />
                    </div>
                  ))}
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};

export default SchoolProjects;

---

File: src\Skills.js

import React, { useState, useEffect } from 'react';
import {
  DndContext,
  closestCenter,
  KeyboardSensor,
  PointerSensor,
  useSensor,
  useSensors,
} from '@dnd-kit/core';
import {
  arrayMove,
  SortableContext,
  sortableKeyboardCoordinates,
  verticalListSortingStrategy,
  useSortable
} from '@dnd-kit/sortable';
import { CSS } from '@dnd-kit/utilities';

const DraggableAccordionItem = ({ skill, isExpanded, onToggle }) => {
    const {
      attributes,
      listeners,
      setNodeRef,
      transform,
      transition,
      isDragging
    } = useSortable({ id: skill.title });
  
    const style = {
      transform: CSS.Transform.toString(transform),
      transition,
      opacity: isDragging ? 0.5 : 1,
      zIndex: isDragging ? 1000 : 1
    };
  
    return (
      <div
        ref={setNodeRef}
        className="mt-5 card w-100 shadow"
        style={style}
      >
        <div className="card-header bg-primary text-tertiary">
          <div className="d-flex justify-content-between align-items-center">
            <div 
              {...attributes} 
              {...listeners}
              className="me-3" 
              style={{ 
                cursor: 'grab',
                fontSize: '20px',
                userSelect: 'none'
              }}
            >
              ⠿
            </div>
  
            <h5 className="mb-0 flex-grow-1">{skill.title}</h5>
  
            <button
              onClick={() => onToggle(skill.title)}
              className="btn btn-link text-tertiary ms-3"
              style={{ 
                textDecoration: 'none',
                fontSize: '20px',
                padding: '0 10px',
                cursor: 'pointer'
              }}
            >
              {isExpanded ? '▼' : '▶'}
            </button>
          </div>
        </div>
  
        <div 
          className={`card-footer bg-tertiary ${isExpanded ? 'd-block' : 'd-none'}`}
        >
          <blockquote className="blockquote mb-0">
            <p>{skill.content}</p>
          </blockquote>
        </div>
      </div>
    );
  };
  
  const DraggableAccordionStack = () => {
    const [expandedCards, setExpandedCards] = useState(new Set());
    const [skillList, setSkillList] = useState([
      {
        title: 'What are the main programming languages, tools, and frameworks that you use in your work?',
        content: 'I am a .NET developer who uses C# as my primary programming language. I use the MVC pattern to create web applications that separate the presentation, business logic, and data access layers. I use SQL Server Management Studio (SSMS) as my database management tool, and SQL as my query language to interact with the data stored in the back end of my applications.'
      },
      {
        title: 'What are the main types of software applications or systems that you develop or maintain?',
        content: 'I develop and maintain in-house projects that offer affiliate marketing services to other businesses. Affiliate marketing is a type of online marketing where affiliates earn commissions for referring customers or leads to a business. My projects provide tools for tracking, reporting, analytics, lead generation, and more to help my clients improve their marketing strategies and results.'
      },
      {
        title: 'How do you collaborate with other developers, designers, testers, or stakeholders in your projects?',
        content: 'I use Jira as my project management tool to keep track of tasks, features, bugs, and progress. I follow the agile methodology to deliver software in short and iterative cycles. I have daily stand-up meetings with my team to share what I have done, what I plan to do, and what challenges I face. I also have weekly sizing meetings with my team and stakeholders to estimate the effort and complexity of future features, and prioritize them according to the client\'s needs and expectations.'
      },
      {
        title: 'What are some of the most challenging or interesting projects that you have worked on?',
        content: 'One of my most challenging projects was the partner sign-up project. The goal was to create a customizable sign-up page for each client that allows them to collect different information from their affiliates based on their requirements. Some of the challenges that I faced were handling a lot of variation and validation for each field, ensuring security and privacy of the data, and integrating with other systems or services.'
      },
      {
        title: 'How do you keep your skills and knowledge up to date?',
        content: 'I am always eager to learn new skills and technologies that are relevant to my work. Some of the sources or resources that I use for learning new technologies or best practices are online courses from Pluralsight, Podcasts, and videos from Youtube. Some of the topics or areas that I am interested in or curious about are AI, machine learning, cloud computing, etc.'
      }
    ]);
  
    // Initialize all cards as expanded
    useEffect(() => {
      setExpandedCards(new Set(skillList.map(skill => skill.title)));
    }, []);
  
    const sensors = useSensors(
      useSensor(PointerSensor, {
        activationConstraint: {
          distance: 8,
        },
      }),
      useSensor(KeyboardSensor, {
        coordinateGetter: sortableKeyboardCoordinates,
      })
    );
  
    const handleDragEnd = (event) => {
      const { active, over } = event;
      
      if (active.id !== over.id) {
        setSkillList((items) => {
          const oldIndex = items.findIndex((item) => item.title === active.id);
          const newIndex = items.findIndex((item) => item.title === over.id);
          return arrayMove(items, oldIndex, newIndex);
        });
      }
    };
  
    const toggleCard = (cardId) => {
      setExpandedCards(prev => {
        const newExpanded = new Set(prev);
        if (newExpanded.has(cardId)) {
          newExpanded.delete(cardId);
        } else {
          newExpanded.add(cardId);
        }
        return newExpanded;
      });
    };
  
    return (
      <div className="container mt-5" style={{width: "100vw", minHeight: "100vh", overflow: "auto"}}>
        <h1 className="text-accent">Skills</h1>
        <div className="d-flex flex-column align-items-center">
          <DndContext
            sensors={sensors}
            collisionDetection={closestCenter}
            onDragEnd={handleDragEnd}
          >
            <SortableContext
              items={skillList.map(skill => skill.title)}
              strategy={verticalListSortingStrategy}
            >
              {skillList.map((skill) => (
                <DraggableAccordionItem
                  key={skill.title}
                  skill={skill}
                  isExpanded={expandedCards.has(skill.title)}
                  onToggle={toggleCard}
                />
              ))}
            </SortableContext>
          </DndContext>
        </div>
      </div>
    );
  };

export default DraggableAccordionStack;

---

File: src\Testimonials.js

const Testimonials = () => {
    return ( 
    <div className="container mt-5" style={{width: "100vw", minHeight: "100vh", overflow: "auto"}}>
        <h2>Testimonials</h2>
    </div> );
}
 
export default Testimonials;

---

File: src\WorkProjects.js

import picture from './pictures/porfolio_photos/LinkTrustExample.png';
import picture2 from './pictures/porfolio_photos/LinkTrustExample2.png';
import picture3 from './pictures/porfolio_photos/UserRoles.png';

import React from 'react';

const WorkProjects = () => {
  return (
    <div className="container mt-5" style={{ width: "100vw", minHeight: "100vh", overflow: "auto" }}>
      <h2 className="text-accent mb-4">Work Projects</h2>

      <div className="mt-5 p-3 bg-tertiary shadow">
        <div className="bg-secondary m-3 p-5 shadow">
          {/* GitHub Section */}
          <div className="bg-primary p-4 rounded shadow-sm mb-5">
            <h5 className="text-tertiary mb-3">Connect With Me</h5>
            <div className="d-flex align-items-center">
              <svg height="24" width="24" viewBox="0 0 16 16" className="text-tertiary">
                <path fill="currentColor" d="M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0016 8c0-4.42-3.58-8-8-8z"></path>
              </svg>
              <a href="https://github.com/TyShelbyCrenshaw" className="text-accent ms-2 text-decoration-none">github.com/TyShelbyCrenshaw</a>
            </div>
          </div>

          {/* Link Trust Projects Section */}
          <h4 className="text-accent mb-4">Link Trust Projects</h4>

          {/* Project Cards */}
          <div className="project-cards">
            {/* User Roles Project */}
            <div className="bg-tertiary p-4 rounded shadow-sm mb-5">
              <h5 className="text-accent mb-3">User Roles Management System</h5>
              <div className="mb-4">
                <ul className="list-unstyled">
                  <li className="mb-2">• View existing roles organized by type (Client, Partner, Advertiser)</li>
                  <li className="mb-2">• Create new roles for any user type</li>
                  <li className="mb-2">• Edit existing roles' permissions</li>
                  <li className="mb-2">• Delete custom roles (but not default system roles)</li>
                </ul>
              </div>
              <img 
                className="rounded shadow-sm img-fluid mb-2" 
                style={{ width: "100%", maxWidth: "900px" }} 
                src={picture3} 
                alt="User Roles Interface" 
              />
            </div>

            {/* Ad Categories Project */}
            <div className="bg-tertiary p-4 rounded shadow-sm mb-5">
              <h5 className="text-accent mb-3">Ad Categories Management</h5>
              <p className="mb-4">
                A full-stack project implementing CRUD operations for ad categories management.
                Features a comprehensive API backend supporting all frontend operations.
              </p>
              <img 
                className="rounded shadow-sm img-fluid mb-2" 
                style={{ width: "100%", maxWidth: "900px" }} 
                src={picture} 
                alt="Ad Categories Interface" 
              />
            </div>

            {/* Transaction Details Project */}
            <div className="bg-tertiary p-4 rounded shadow-sm mb-5">
              <h5 className="text-accent mb-3">Transaction Details Reporting System</h5>
              <p className="mb-4">
                A comprehensive reporting system featuring:
                <br />• Advanced filtering capabilities
                <br />• CSV export functionality
                <br />• Complex inline editing system
              </p>
              <img 
                className="rounded shadow-sm img-fluid" 
                style={{ width: "100%", maxWidth: "900px" }} 
                src={picture2} 
                alt="Transaction Details Interface" 
              />
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};

export default WorkProjects;